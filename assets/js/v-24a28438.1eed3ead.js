"use strict";(self.webpackChunkvuepress=self.webpackChunkvuepress||[]).push([[83],{628:(e,p,t)=>{t.r(p),t.d(p,{data:()=>o});const o=JSON.parse('{"key":"v-24a28438","path":"/posts/change-macos-php-version.html","title":"修改macOS默认PHP环境为MAMP，方便定制PHP运行环境","lang":"zh_CN","frontmatter":{"title":"修改macOS默认PHP环境为MAMP，方便定制PHP运行环境","date":"2022/07/28 00:18:00","permalink":"/posts/change-macos-php-version.html","category":["技术笔记"],"tag":["macOS","PHP"],"description":"由于某些时候有特定原因，PHP 环境需要安装额外的扩展。 而苹果应该是为了所谓的安全原因，使得在较新版本的 macOS 额外编译 PHP 扩展十分麻烦。关闭 ISP 功能都不太好使，搜索了好久也没有找到合适的方法。 试过很多方法都不尽人意后，算是找到一个比较完美的解决办法。 准备工作 安装 MAMP（ macOS 下非常好用的 PHP 集成开发环境）;...","head":[["meta",{"property":"og:url","content":"https://kepan.me/posts/change-macos-php-version.html"}],["meta",{"property":"og:site_name","content":"KEPAN"}],["meta",{"property":"og:title","content":"修改macOS默认PHP环境为MAMP，方便定制PHP运行环境"}],["meta",{"property":"og:description","content":"由于某些时候有特定原因，PHP 环境需要安装额外的扩展。 而苹果应该是为了所谓的安全原因，使得在较新版本的 macOS 额外编译 PHP 扩展十分麻烦。关闭 ISP 功能都不太好使，搜索了好久也没有找到合适的方法。 试过很多方法都不尽人意后，算是找到一个比较完美的解决办法。 准备工作 安装 MAMP（ macOS 下非常好用的 PHP 集成开发环境）;..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh_CN"}],["meta",{"property":"article:tag","content":"macOS"}],["meta",{"property":"article:tag","content":"PHP"}],["meta",{"property":"article:published_time","content":"2022-07-27T16:18:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"修改macOS默认PHP环境为MAMP，方便定制PHP运行环境\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-07-27T16:18:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":3,"title":"准备工作","slug":"准备工作","link":"#准备工作","children":[]},{"level":3,"title":"开始操作","slug":"开始操作","link":"#开始操作","children":[]}],"autoDesc":true,"excerpt":"<p>由于某些时候有特定原因，PHP 环境需要安装额外的扩展。</p>\\n<p>而苹果应该是为了所谓的安全原因，使得在较新版本的 macOS 额外编译 PHP 扩展十分麻烦。关闭 ISP 功能都不太好使，搜索了好久也没有找到合适的方法。</p>\\n<p>试过很多方法都不尽人意后，算是找到一个比较完美的解决办法。</p>\\n<h3> 准备工作</h3>\\n<ul>\\n<li>安装 MAMP（ macOS 下非常好用的 PHP 集成开发环境）</li>\\n</ul>\\n<h3> 开始操作</h3>\\n<ol>\\n<li>\\n<p>首先我们可以在终端使用 <code>php -v</code> 查看到当前 PHP 环境版本，记下当前版本便于区分。</p>\\n</li>\\n<li>\\n<p>终端输入 <code>sudo vim ~/.bash_profile</code> ，进入 vi 编辑模式。</p>\\n</li>\\n<li>\\n<p>添加环境变量 <code>export PATH=\\"/Applications/MAMP/bin/php/php7.3.29/bin:$PATH\\"</code> 到文件中，回车然后退出编辑模式，保存。</p>\\n</li>\\n<li>\\n<p>终端执行 <code>source .bash_profile</code> ，使刚才修改的环境变量配置文件生效。</p>\\n</li>\\n<li>\\n<p>输入 <code>php -v</code> ，是不是变成了你需要的 PHP 版本呢？</p>\\n</li>\\n<li>\\n<p><strong>执行完上面的步骤后，只是暂时生效，我们需要让终端每次运行的时候，自动生效的话，就需要另外执行以下步骤。</strong></p>\\n</li>\\n</ol>"}')},15:(e,p,t)=>{t.r(p),t.d(p,{default:()=>c});var o=t(252);const n=[(0,o.uE)('<p>由于某些时候有特定原因，PHP 环境需要安装额外的扩展。</p><p>而苹果应该是为了所谓的安全原因，使得在较新版本的 macOS 额外编译 PHP 扩展十分麻烦。关闭 ISP 功能都不太好使，搜索了好久也没有找到合适的方法。</p><p>试过很多方法都不尽人意后，算是找到一个比较完美的解决办法。</p><h3 id="准备工作" tabindex="-1"><a class="header-anchor" href="#准备工作" aria-hidden="true">#</a> 准备工作</h3><ul><li>安装 MAMP（ macOS 下非常好用的 PHP 集成开发环境）</li></ul><h3 id="开始操作" tabindex="-1"><a class="header-anchor" href="#开始操作" aria-hidden="true">#</a> 开始操作</h3><ol><li><p>首先我们可以在终端使用 <code>php -v</code> 查看到当前 PHP 环境版本，记下当前版本便于区分。</p></li><li><p>终端输入 <code>sudo vim ~/.bash_profile</code> ，进入 vi 编辑模式。</p></li><li><p>添加环境变量 <code>export PATH=&quot;/Applications/MAMP/bin/php/php7.3.29/bin:$PATH&quot;</code> 到文件中，回车然后退出编辑模式，保存。</p></li><li><p>终端执行 <code>source .bash_profile</code> ，使刚才修改的环境变量配置文件生效。</p></li><li><p>输入 <code>php -v</code> ，是不是变成了你需要的 PHP 版本呢？</p></li><li><p><strong>执行完上面的步骤后，只是暂时生效，我们需要让终端每次运行的时候，自动生效的话，就需要另外执行以下步骤。</strong></p></li></ol><p>终端输入 <code>sudo vim ~/.zshrc</code> ，进入编辑模式后追加一行 <code>source ~/.bash_profile</code> ，保存退出就搞定了。</p><blockquote><p>此方法的好处是，不修改系统任何信息，又能实现 PHP 环境的自定义，比如安装额外的扩展等等。这个方法我也是搜索找来的，特此记录以备用。</p></blockquote>',9)],i={},c=(0,t(744).Z)(i,[["render",function(e,p){return(0,o.wg)(),(0,o.iD)("div",null,n)}]])}}]);